
#####################################
DEVOPS DEVELOPMENT ON WINDOWS 10
#####################################

      ----------------------------
      |  Microsoft Windows 10 PC |
      ----------------------------
	|	|	|
	|	|	|
	|	|	 ----- VirtualBox (win)
	|	|			    |	|
	|	|			    |	|
	|	 --- Vagrant (Win)	    |	 ------ Linux VM
	|	 --- Terraform (Win)	    |		|	|
	|	 --- Packer (Win)	    |		|	|
	|	 --- Git (Win)		    |		|	 --DevStack (OpenStack)
	|				    |		|
	|				    |		 --Docker
	|				    |		 --Git
	|				    |
	 ---WSL				     ------ Windows Server VM
	      |						|
	       --Ubuntu Bash				|
			|				 --Windows Containers
			|				 --Docker
			 -- Vagrant (lin)		 --Git (Win)
			 -- Terraform (lin)
			 -- Packer (lin)
			 -- Git (lin)

				 

#########################
Setup WSL Linux User
#########################

# Normal Linux user add with default /home directory
useradd -m mywsluser
passwd

# Add user to Sudoers
sudo adduser mywsluser sudo

# Copy bash customizations you have from root user (if any)
shopt -s dotglob
cp -rT /root /home/mywsluser

chown -R mywsluser:mywsluser /home/mywsluser

# From command prompt as administrator (not within wsl)
C:\>runas /user:administrator cmd

lxrun /setdefaultuser mywsluser

# If you forget to add your non root default user to the sudoers group, you'll need to reset your default user back to root, then change add the user to the sudoers group, then change the default user back to your new user account.
eg) 
 > from admin command prompt
lxrun /setdefaultuser root
 > from wsl
sudo adduser mywsluser sudo
 > from admin command prompt again
lxrun /setdefaultuser mywsluser


###########################
Git with Windows & WSL
###########################
* Using Git is not easily, or safely shared between the Windows OS and WSL
* To avoid risks of ruining WSL, as of now (10/2017), run muliple Git executables (one per system)
* To avoid risks of ruining WSL, assume each system/subsystem has its own copy of a given Git repository.
	- Git is distributed by nature so synching forks will be required when tools require you to cross boundaries
* When running Git in a Linux VM via VirtualBox, you can share the git repo with Windows by putting the Git repos in a Vbox Share.
	- The following caveats have been found so far:
		> Security of directory permissions is not going to be the same (needs to be very open)
		> Symlinks do NOT work well at all. Use full paths and don't expect symlinks to work

###########################
Docker with Windows
###########################
* There are 2 big caveats:
	1. If you use VirtualBox, you cannot use Windows Containers natively on the host OS
	2. If you choose to use Windows Containers natively on the host OS, you cannot use VirtuaBox
		- Because of Hyper-V




#####################
Vagrant on WSL
#####################

#<Assumes WSL and Ubuntu flavor are installed>
<If not, see here:  https://msdn.microsoft.com/en-us/commandline/wsl/install_guide>

#1. Download the package in WSL
wget https://releases.hashicorp.com/vagrant/2.0.0/vagrant_2.0.0_x86_64.deb

#2. Install the package in WSL
sudo dpkg -i vagrant_2.0.0_x86_64.deb

#3. Add this to your .bashrc or .bash_profile for awareness of WSL
export VAGRANT_WSL_ENABLE_WINDOWS_ACCESS="1"

#4. Optional ways to override the current user:
Other useful WSL related environment variables:
    VAGRANT_WSL_WINDOWS_ACCESS_USER - Override current Windows username
    VAGRANT_WSL_DISABLE_VAGRANT_HOME - Do not modify the VAGRANT_HOME variable
    VAGRANT_WSL_WINDOWS_ACCESS_USER_HOME_PATH - Custom Windows system home path


#source:
#https://www.vagrantup.com/docs/other/wsl.html



